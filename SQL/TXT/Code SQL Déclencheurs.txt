DELIMITER $$

CREATE TRIGGER update_inventory_on_rental
AFTER INSERT ON location
FOR EACH ROW
BEGIN
    UPDATE jeu
    SET quantite_disponible = quantite_disponible - 1
    WHERE id_jeu = NEW.id_jeu;
END$$

CREATE TRIGGER update_inventory_on_return
AFTER UPDATE ON location
FOR EACH ROW
BEGIN
    IF OLD.date_fin IS NULL AND NEW.date_fin IS NOT NULL THEN
        UPDATE jeu
        SET quantite_disponible = quantite_disponible + 1
        WHERE id_jeu = NEW.id_jeu;
    END IF;
END$$

DELIMITER ;
DELIMITER $$

CREATE TRIGGER add_favorite_on_high_rating
AFTER INSERT ON note
FOR EACH ROW
BEGIN
    IF NEW.valeur = 5 THEN
        INSERT IGNORE INTO jeu_favori (id_utilisateur, id_jeu, date_ajout)
        VALUES (NEW.id_utilisateur, NEW.id_jeu, CURDATE());
    END IF;
END$$

DELIMITER ;
DELIMITER $$

CREATE TRIGGER prevent_rental_if_out_of_stock
BEFORE INSERT ON location
FOR EACH ROW
BEGIN
    DECLARE available INT;
    
    SELECT quantite_disponible INTO available FROM jeu WHERE id_jeu = NEW.id_jeu;

    IF available <= 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Impossible de louer ce jeu : plus d\'exemplaires disponibles';
    END IF;
END$$

DELIMITER ;
